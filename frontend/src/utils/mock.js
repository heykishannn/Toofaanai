// Mock data for testing the frontend
export const mockChats = [
  {
    id: '1',
    title: 'Getting Started with React',
    timestamp: new Date(Date.now() - 3600000), // 1 hour ago
    messages: [
      {
        id: '1-1',
        type: 'user',
        content: 'Can you help me create a simple React component?',
        timestamp: new Date(Date.now() - 3600000)
      },
      {
        id: '1-2',
        type: 'ai',
        content: 'Of course! I\'d be happy to help you create a React component. Here\'s a simple example of a functional component:\n\n```jsx\nimport React from \'react\';\n\nconst MyComponent = () => {\n  return (\n    <div>\n      <h1>Hello, World!</h1>\n      <p>This is my first React component!</p>\n    </div>\n  );\n};\n\nexport default MyComponent;\n```\n\nThis component renders a heading and a paragraph. Would you like me to explain any part of this code or help you with a more specific component?',
        timestamp: new Date(Date.now() - 3595000),
        isCode: true
      }
    ]
  },
  {
    id: '2',
    title: 'CSS Animations',
    timestamp: new Date(Date.now() - 7200000), // 2 hours ago
    messages: [
      {
        id: '2-1',
        type: 'user',
        content: 'How do I create smooth animations in CSS?',
        timestamp: new Date(Date.now() - 7200000)
      },
      {
        id: '2-2',
        type: 'ai',
        content: 'Great question! CSS animations can be created using the `@keyframes` rule and the `animation` property. Here are some key concepts:\n\n1. **Transitions** - For simple state changes\n2. **Keyframe animations** - For complex animations\n3. **Transform property** - For smooth animations\n\nWould you like me to show you some specific examples?',
        timestamp: new Date(Date.now() - 7195000)
      }
    ]
  }
];

// Mock AI response generator
export const mockResponse = (userMessage) => {
  const lowerMessage = userMessage.toLowerCase();
  
  // Check for code generation requests
  if (lowerMessage.includes('code') || lowerMessage.includes('create') || lowerMessage.includes('build') || lowerMessage.includes('html') || lowerMessage.includes('css') || lowerMessage.includes('javascript')) {
    return {
      content: `// Here's a simple HTML page with CSS styling
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Surya AI Generated Page</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            text-align: center;
            max-width: 500px;
        }
        h1 {
            color: #333;
            margin-bottom: 20px;
            font-size: 2.5em;
        }
        p {
            color: #666;
            line-height: 1.6;
            margin-bottom: 30px;
        }
        .button {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        .button:hover {
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üåü Welcome!</h1>
        <p>This page was generated by Surya AI. It features a beautiful gradient background and modern styling.</p>
        <button class="button" onclick="alert('Hello from Surya AI!')">Click Me!</button>
    </div>
</body>
</html>`,
      isCode: true
    };
  }
  
  // Default responses for different types of messages
  const responses = [
    "Hello! I'm Surya AI ‚òÄÔ∏è, your helpful assistant. I can help you with coding, answer questions, and generate content. What would you like to work on today?",
    "Great question! I'm here to help you with any coding challenges, creative projects, or general questions you might have. Feel free to ask me anything!",
    "I'd be happy to help you with that! As Surya AI, I can assist with programming, web development, creative writing, and much more. What specific area would you like to explore?",
    "That's an interesting topic! I can provide detailed explanations, code examples, or creative solutions. Would you like me to dive deeper into any particular aspect?",
    "Thanks for reaching out! I'm designed to be helpful, informative, and creative. Whether you need technical help or just want to brainstorm ideas, I'm here for you!"
  ];
  
  return {
    content: responses[Math.floor(Math.random() * responses.length)],
    isCode: false
  };
};